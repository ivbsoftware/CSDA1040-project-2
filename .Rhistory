load("C:/Users/mparravani/OneDrive - ArcelorMittal/Data Analytics/York Data Analytics/Basic Methods of Data Analytics/Final Project/Final Project Workspace.RData")
#Lets try randomforest model
rf.grid <- expand.grid(.mtry=5.0)
rf_Out_1 <- train(Outcome ~ loan_amount_000s+purchaser_type_name+loan_purpose_name+agency_name+county_name+binned_Salary,
df_noNA_2,
method = "rf",
trControl = train_control,
tuneGrid = rf.grid)
##### LIBRARIES #######
library(readr)
library(plyr)
library(dplyr)
library(ggplot2)
library(ggthemes)
library(rpart)
library(rpart.plot)
library(Amelia)
library(psych)
library(caret)
library(Hmisc)
library(randomForest)
library(ggmap)
#Lets try randomforest model
rf.grid <- expand.grid(.mtry=5.0)
rf_Out_1 <- train(Outcome ~ loan_amount_000s+purchaser_type_name+loan_purpose_name+agency_name+county_name+binned_Salary,
df_noNA_2,
method = "rf",
trControl = train_control,
tuneGrid = rf.grid)
install.packages("rmarkdown")
tuneGrid = rf.grid)
knitr::opts_chunk$set(echo = TRUE)
ratingcount<-nrow(df)-colSums(is.na(df[,2:ncol(df)]))
knitr::opts_chunk$set(echo = TRUE)
if(! "recommenderlab" %in% installed.packages())
install.packages("recommenderlab", depend = TRUE)
if(! "readr" %in% installed.packages())
install.packages("readr", depend = TRUE)
if(! "RDSTK" %in% installed.packages())
install.packages("RDSTK", depend = TRUE)
library("recommenderlab")
library("ggplot2")
library("readr")
library("RDSTK")
library("Matrix")
#this.dir <- dirname(rstudioapi::getActiveDocumentContext()$path)
#setwd(this.dir)
df <- read_csv(file="../data/jesterfinal151cols.csv.zip",col_names = FALSE)
#Rename columns as per their "Joke ID" and columns to the userid
names(df)     <- c("RATINGS",1:(ncol(df)-1))
row.names(df) <- c(1:nrow(df))
#replace all 99 ratings with NA so we can filter them out
df[,2:ncol(df)][df[,2:ncol(df)]==99]<-NA
df
jokes <- read_tsv(file="../data/jester_items.tsv",col_names = FALSE)
jokes <- jokes['X2']
head(jokes)
ratingcount<-nrow(df)-colSums(is.na(df[,2:ncol(df)]))
summary(ratingcount)
ggplot() + aes(ratingcount)+ geom_histogram(colour="black", fill="white")+
ylab("Number of Jokes")+
xlab("Number of Ratings")
ratingcount_u<-as.vector(df[[1]])
summary(ratingcount_u)
ggplot() + aes(ratingcount_u)+ geom_histogram(colour="black", fill="white")+
ylab("Number of Users")+
xlab("Number of Ratings Given")
jokes[,2]<-1
jokes[,3]<-1
colnames(jokes)<-c("Joke","Sentiment","AvgRating")
head(jokes)
for (i in 1:nrow(jokes)) {
jokes[i,3]<- median(df[[i+1]],na.rm=TRUE)
}
jokes
ggplot(data=jokes, mapping = aes(x=jokes$Sentiment,y=jokes$AvgRating)) +
geom_point()+
ggtitle("Sentiment vs Median Rating")+
ylab("Median Rating") + xlab("Sentiment Score")
for (i in 1:nrow(jokes)) {
jokes[i,3]<- median(df[[i+1]],na.rm=TRUE)
}
head(jokes)
for (i in 1:nrow(jokes)) {
jokes[i,2]<-text2sentiment(jokes[[i,1]])
}
for (i in 1:nrow(jokes)) {
jokes[i,3]<- median(df[[i+1]],na.rm=TRUE)
}
head(jokes)
ggplot(data=jokes, mapping = aes(x=jokes$Sentiment,y=jokes$AvgRating)) +
geom_point()+
ggtitle("Sentiment vs Median Rating")+
ylab("Median Rating") + xlab("Sentiment Score")
s<-as(df[,2:ncol(df)], "matrix")
dimnames(s) <- list(rownames(s, do.NULL = FALSE, prefix = "u"),
colnames(s, do.NULL = FALSE, prefix = "j"))
s<-as(dropNA(s), "sparseMatrix")
rm <- new("realRatingMatrix",data=s)
rm
qplot(getRatings(rm), binwidth = 1,
main = "Histogram of ratings", xlab = "Rating", ylab = "Number of users")
summary(rowCounts(rm))
nusers=dim(rm)[1]
njokes=dim(rm)[2]
image(rm[sample(nusers,25),sample(njokes,25)])
image(rm[sample(nusers,25),sample(njokes,25)])
image(sample(rm, 500), main = "Raw ratings")
summary(getRatings(rm))
Jokes50 <- rm[rowCounts(rm) >50,]
Jokes50
summary(getRatings(normalize(Jokes50, method = "Z-score")))
qplot(rowCounts(rm), binwidth = 10,
main = "Jokes Rated on average",
xlab = "# of Users",
ylab = "# of Jokes rated")
qplot(colMeans(rm), binwidth = .5,
main = "Mean rating of Jokes",
xlab = "Rating",
ylab = "# of jokes")
install.packages("pacman")
install.packages("textclean")
install.packages("twitteR")
install.packages("tm")
install.packages("stopwords")
install.packages("Rgraphviz")
install.packages("wordcloud")
library(twitteR)
#setup_twitter_oauth("API key", "API secret", "Access token", "Access secret")
setup_twitter_oauth("EwspnWlRAvgyRW8UWk3bYKKkN", "p1xDCcwATEF59s57AHJk6wOOjTesjvH2JuFYPjMcrt0cHN0wAM",
"345036265-6iErPPgdeo3IPEg16oNYI857eCSyl9fvlSJrknGd", "twuxEILXBqWS7jeDYxdz4UcUoZrowdQ7pVWA58u6AVCgw")
myTweets <- userTimeline("realDonaldTrump", n=1000)
n <- length(myTweets)
myTweets[1:3]
#df <- do.call("rbind", lapply(myTweets, as.data.frame))
tweets.df <- twListToDF(myTweets)
dim(tweets.df)
library(tm)
# build a corpus, which is a collection of text documents
# VectorSource specifies that the source is character vectors.
myCorpus <- Corpus(VectorSource(tweets.df$text))
# remove punctuation
myCorpus <- tm_map(myCorpus, removePunctuation)
# remove numbers
myCorpus <- tm_map(myCorpus, removeNumbers)
# remove http*
toSpace = content_transformer( function(x, pattern) gsub(pattern,"",x) )
myCorpus = tm_map( myCorpus, toSpace, "https.*")
# remove stopwords
# keep "r" by removing it from stopwords
library(stopwords)
myStopwords <- c(stopwords(language="en", source="smart"), "available", "via", "the")
idx <- which(myStopwords == "very")
myStopwords <- myStopwords[-idx]
myCorpus <- tm_map(myCorpus, stripWhitespace)
myCorpus <- tm_map(myCorpus, removeWords, myStopwords)
myStopwords
myStopwords[length(myStopwords)+1]<-"..."
myStopwords
myDtm <- TermDocumentMatrix(myCorpus, control = list(minWordLength = 1))
inspect(myDtm)
#sentiment analysis
require(devtools)
install.packages("devtools")
install_github("sentiment140", "okugami79")
install.packages("devtools")
knitr::opts_chunk$set(echo = TRUE)
library(tm)
library(stopwords)
library(ggplot2)
library(topicmodels)
install.packages("topicmodels")
library(tm)
library(stopwords)
library(ggplot2)
library(topicmodels)
require(devtools)
install_github("sentiment140", "okugami79")
library(sentimentr)
sentiments <- sentiment_by(tweets.df$text)
sentiments <- as.data.frame(sentiments)
#sentiment analysis
require(devtools)
install_github("sentiment140", "okugami79")
require(devtools)
install_github('sentiment140', 'okugami79')
install.packages("githubinstall")
require(devtools)
install_github('sentiment140', 'okugami79')
library(githubinstall)
require(devtools)
install_github('sentiment140', 'okugami79')
library(sentimentr)
install.packages("devtools")
install.packages("devtools")
devtools::install_github('okugami79/sentiment140')
library(tm)
library(stopwords)
library(ggplot2)
library(topicmodels)
library(githubinstall)
devtools::install_github('okugami79/sentiment140')
library(sentimentr)
install.packages("sentimentr")
install.packages("graph")
install.packages("Rgraphviz")
install.packages("wordcloud")
source("https://bioconductor.org/biocLite.R")
source("https://bioconductor.org/biocLite.R")
biocLite("Rgraphviz")
source("https://bioconductor.org/biocLite.R")
biocLite("Rgraphviz")
library(graph)
library(Rgraphviz)
library(tm)
library(stopwords)
library(ggplot2)
library(topicmodels)
library(githubinstall)
devtools::install_github('okugami79/sentiment140')
library(sentimentr)
source("https://bioconductor.org/biocLite.R")
biocLite("Rgraphviz")
library(graph)
library(Rgraphviz)
library(wordcloud)
setwd("C:/Users/mparravani/OneDrive - ArcelorMittal/Data Analytics/GitHub Storage/CSDA1040-project-2/playground")
data = read.csv(("data/Consumer_Complaints.csv")
data = read.csv("data/Consumer_Complaints.csv")
setwd("C:/Users/mparravani/OneDrive - ArcelorMittal/Data Analytics/GitHub Storage/CSDA1040-project-2")
data = read.csv("data/Consumer_Complaints.csv")
setwd("C:/Users/mparravani/OneDrive - ArcelorMittal/Data Analytics/GitHub Storage/CSDA1040-project-2")
data = read.csv("data/Consumer_Complaints.csv")
?read.csv
data = read.csv(file.choose())
setwd("C:/Users/mparravani/OneDrive - ArcelorMittal/Data Analytics/GitHub Storage/CSDA1040-project-2")
data = read.csv("data/Consumer_Complaints.csv", nrows=100000)
data = read.csv("data/Consumer_Complaints.csv", nrows=10000)
data = read.csv("data/Consumer_Complaints.csv")
setwd("C:/Users/mparravani/OneDrive - ArcelorMittal/Data Analytics/GitHub Storage/CSDA1040-project-2")
data = read.csv("data/Consumer_Complaints.csv",nrows=100000)
data = read.csv(file="data/Consumer_Complaints.csv", nrows=100000)
data = read.csv(file.choose(), nrows=100000)
head(data)
df = read.csv(file.choose(), nrows=100000)
head(df)
ggplot(data=df, maping = aes(x=df.product)) + geom_histogram()
ggplot(data=df, maping = aes(x=df$product)) + geom_histogram(aes(df))
ggplot(data=df, maping = aes(x=df$product)) + geom_histogram())
ggplot(data=df, maping = aes(x=df$product)) + geom_histogram()
ggplot(data=df, maping = aes(x=df$Product)) + geom_histogram()
ggplot(data=df, maping = aes(x=df$Product)) + geom_histogram(x=df$Product)
ggplot(data=df) + geom_histogram(x=df$Product)
ggplot(data=df) + geom_histogram(aes(x=df$Product)
ggplot(data=df) + geom_histogram(aes(x=df$Product))
ggplot(data=df) + geom_histogram(aes(df$Product))
ggplot(data=df,mapping=aes(x=df$Product, y=nrow(df))) + geom_histogram(aes(df$Product))
ggplot(data=df,mapping=aes(x=df$Product, y=nrow(df))) + geom_bar()
ggplot(data=df,mapping=aes(x=df$Product))) + geom_bar()
ggplot(data=df,mapping=aes(x=df$Product)) + geom_bar()
ggplot(data=df,mapping=aes(x=df$Product)) + geom_bar() + coord_flip()
ggplot(data=df,mapping=aes(x=df$Product)) + geom_bar() + coord_flip() + sort(df$Product,decreasing = FALSE)
ggplot(data=df,mapping=aes(x=df$Product)) + geom_bar() + coord_flip()
ggplot(data=df,mapping=aes(x=df$Product)) + geom_bar(colour="black", fill="white")+
ylab("Product")+
xlab("Number Complaints")) + coord_flip()
ggplot(data=df,mapping=aes(x=df$Product)) + geom_bar(colour="black", fill="white")+
ylab("Product")+
xlab("Number Complaints") + coord_flip()
ggplot(data=df,mapping=aes(x=df$Product)) + geom_bar(colour="black", fill="white")+
xlab("Product")+
ylab("Number Complaints") + coord_flip()
df = read.csv(file.choose(), nrows=200000)
head(df)
ggplot(data=df,mapping=aes(x=df$Product)) + geom_bar(colour="black", fill="white")+
xlab("Product")+
ylab("Number Complaints") + coord_flip()
ggplot(data=df,mapping=aes(reorder(x=df$Product))) + geom_bar(colour="black", fill="white")+
xlab("Product")+
ylab("Number Complaints") + coord_flip()
ggplot(data=df,mapping=aes(x=reorder(df$Product))) + geom_bar(colour="black", fill="white")+
xlab("Product")+
ylab("Number Complaints") + coord_flip()
summary(df)
describe(df)
ggplot(data=df,mapping=aes(x=reorder(df$Product))) + geom_bar(colour="black", fill="white")+
xlab("Product")+
ylab("Number Complaints") + coord_flip()
ggplot(data=df,mapping=aes(x=reorder(Product))) + geom_bar(colour="black", fill="white")+
xlab("Product")+
ylab("Number Complaints") + coord_flip()
?reorder
ggplot(data=df,mapping=aes(x=reorder(df$Product,df$Product,function(x)-length(x)))) + geom_bar(colour="black", fill="white")+
xlab("Product")+
ylab("Number Complaints") + coord_flip()
ggplot(data=df,mapping=aes(x=reorder(df$Product,df$Product,length(x)-function(x)))) + geom_bar(colour="black", fill="white")+
function(x)-
ggplot(data=df,mapping=aes(x=reorder(df$Product,df$Product,function(x)-length(x)))) + geom_bar(colour="black", fill="white")+
xlab("Product")+
ylab("Number Complaints") + coord_flip()
ggplot(data=df,mapping=aes(x=reorder(df$Product,df$Product,function(x)-length(x)))) + geom_bar(colour="black", fill="white")+
xlab("Product")+
ylab("Number Complaints") + coord_flip()
ggplot(data=df,mapping=aes(x=reorder(df$Product,df$Product,-1*function(x)-length(x)))) + geom_bar(colour="black", fill="white")+
xlab("Product")+
ylab("Number Complaints") + coord_flip()
ggplot(data=df,mapping=aes(x=reorder(df$Product,df$Product,function(x)-length(x)))) + geom_bar(colour="black", fill="white")+
xlab("Product")+
ylab("Number Complaints") + coord_flip()
ggplot(data=df,mapping=aes(x=reorder(df$Product,df$Product,-df(Product)[Product]))) + geom_bar(colour="black", fill="white")+
xlab("Product")+
ylab("Number Complaints") + coord_flip()
ggplot(data=df,mapping=aes(x=reorder(df$Product,df$Product,-df(Product)[Product]))) + geom_bar(colour="black", fill="white")+
xlab("Product")+
ylab("Number Complaints") + coord_flip()
ggplot(data=df,mapping=aes(x=reorder(df$Product,-df(Product)[Product]))) + geom_bar(colour="black", fill="white")+
xlab("Product")+
ylab("Number Complaints") + coord_flip()
ggplot(data=df,mapping=aes(x=reorder(Product,-df(Product)[Product]))) + geom_bar(colour="black", fill="white")+
xlab("Product")+
ylab("Number Complaints") + coord_flip()
ggplot(data=df,mapping=aes(x=reorder(Product,-table(Product)[Product]))) + geom_bar(colour="black", fill="white")+
xlab("Product")+
ylab("Number Complaints") + coord_flip()
ggplot(data=df,mapping=aes(x=reorder(Product,-table(Product)[Product]))) + geom_bar(colour="black", fill="white")+
xlab("Product")+
ylab("Number Complaints")
ggplot(data=df,mapping=aes(y=reorder(Product,-table(Product)[Product]))) + geom_bar(colour="black", fill="white")+
xlab("Product")+
ylab("Number Complaints")
ggplot(data=df,mapping=aes(x=reorder(Product,-table(Product)[Product]))) + geom_ribbon(colour="black", fill="white")
ggplot(data=df,mapping=aes(x=reorder(Product,-table(Product)[Product]))) + geom_bar(colour="black", fill="white")
ggplot(data=df,mapping=aes(x=reorder(Product,-table(Product)[Product]))) + geom_bar(colour="black", fill="white")+
xlab("Product")+
ylab("Number Complaints")
ggplot(data=df,mapping=aes(x=reorder(Product,-table(Product)[Product]))) + geom_bar(colour="black", fill="white")+
coord_flip()+ xlab("Product")+ylab("Number Complaints")
ggplot(data=df,mapping=aes(x=reorder(Product,-table(Product)[Product]))) + geom_bar(colour="black", fill="white")+
xlab("Product")+ylab("Number Complaints")+theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data=df,mapping=aes(x=reorder(Product,-table(Product)[Product]))) + geom_bar(colour="black", fill="white")+
xlab("Product")+ylab("Number Complaints")+theme(axis.text.x = element_text(angle = 90))
knitr::opts_chunk$set(echo = TRUE)
library(tm)
library(stopwords)
library(ggplot2)
library(topicmodels)
library(githubinstall)
devtools::install_github('okugami79/sentiment140')
library(sentimentr)
source("https://bioconductor.org/biocLite.R")
biocLite("Rgraphviz")
ggplot(data=df,mapping=aes(x=reorder(Product,-table(Product)[Product]))) + geom_bar(colour="black", fill="white")+
xlab("Product")+ylab("Number Complaints")+theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data=df,mapping=aes(x=reorder(Product,-table(Product)[Product]))) + geom_bar(colour="black", fill="white")+
xlab("Product")+ylab("Number Complaints")+ggpubr::rotate_x_text()
install.packages("ggpubr")
library(ggpubr)
knitr::opts_chunk$set(echo = TRUE)
ggplot(data=df,mapping=aes(x=reorder(Product,-table(Product)[Product]))) + geom_bar(colour="black", fill="white")+
xlab("Product")+ylab("Number Complaints")+ggpubr::rotate_x_text()
knitr::opts_chunk$set(echo = TRUE)
library(tm)
library(stopwords)
library(ggplot2)
library(ggplot2)
library(tm)
library(stopwords)
library(ggplot2)
